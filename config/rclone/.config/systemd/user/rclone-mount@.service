# User service for rclone mounting
#
# Pass the configured remote name as the service argument, e.g.
# systemctl --user enable --now rclone-mount@<my-remote>
#
# We choose to place the mounts under $XDG_RUNTIME_DIR, as the mount-point
# itself is transient, even if the data is persistent. This makes even more
# sense if you consider that our system does not exhibit sole ownership over the
# referenced data set.
# Config is sourced from $XDG_CONFIG_HOME/rclone.
#
# Much fine-tuning can be done on the exact mount options used for caching etc.
# We aim to provide a light document friendly configuration. It is not suitably
# configured for media heavy workloads.

[Unit]
Description=rclone: Remote FUSE filesystem for cloud remote %i
Documentation=man:rclone(1)
After=network-online.target
Wants=network-online.target
# Sanity check config and mount paths
AssertPathExists=%E/rclone/rclone.conf
AssertPathExists=%t

[Service]
Type=notify
# Guarantee any paths we create or files we mirror are only user-accessible
UMask=0077
Environment=RCLONE_MNT="%t/rclone/%i"
ExecStartPre=/usr/bin/mkdir -p "${RCLONE_MNT}"
ExecStart=/usr/bin/rclone mount \
  --config "%E/rclone/rclone.conf" \
  --umask 077 \
  --dir-perms 0700 \
  --file-perms 0600 \
  --allow-non-empty \
  --poll-interval 30s \
  --dir-cache-time 72h \
  --attr-timeout 72h \
  --vfs-cache-mode writes \
  --vfs-cache-max-size 512M \
  --vfs-cache-max-age 72h \
  --vfs-cache-poll-interval 5m \
  --vfs-read-chunk-size 128M \
  --vfs-read-chunk-size-limit off \
  --log-level INFO \
  "%i:" "${RCLONE_MNT}"
ExecStop=/bin/fusermount -u "${RCLONE_MNT}"
ExecStopPost=/usr/bin/rmdir "${RCLONE_MNT}"
Restart=on-failure
RestartSec=180s

[Install]
WantedBy=default.target

