#!/usr/bin/env sh
###############################################################################
# Perform setup for interactive sh shells.
# Shouldn't need much if any further configuration beyond the shared
# configuration present in $XDG_CONFIG_HOME/shell/.

if [ -z "$IS_LOGIN_SHELL" ]; then
  # If this is a login sh, then setting up $SHLVL will already have been done.
  # Otherwise, initialize/increment $SHLVL here (see: `sh/login` for details)
  if [ -z "$SHLVL" ]; then
    assign_export SHLVL 1
  else
    assign_export SHLVL $((SHLVL+1))
  fi
fi

require_source "${XDG_CONFIG_HOME:-$HOME/.config}/shell/interactive"

# Colors and PS1 setup - for now this is largely shared between shells
# Tramp and other dumb terminals require a more ordinary prompt
if [ "$TERM" = "dumb" ]; then
    PS1="$ "
    PS2='> '
    PS3='#? '
    PS4='+ '
  else
  if [ $(id -u) -eq 0 ]; then
    # Special root PS1 colors
    fg_shell="$(text_fg_color 10)"
    fg_path="$(text_fg_color 10)"
    fg_git="$(text_fg_color 10)"
    fg_separator="$(text_fg_color cyan)"
  else
    # PS1 for other users
    fg_shell="$(text_fg_color 10)"
    fg_path="$(text_fg_color red)"
    fg_git="$(text_fg_color blue)"
    fg_separator="$(text_fg_color cyan)"
  fi
  color_reset="$(text_reset)"
  # Add a convenient shell name identifier
  PS1="$(text_reset)${color_shell}[\$(whoami)@\$(hostname):sh]\
${color_path}<\$(basename \"\${PWD}\")/>\
${color_git}\$(get_vcs_branch)\
${color_separator}Î» ${color_reset}"
  PS2="${fg_separator}> ${color_reset}"
  PS3="${fg_separator}#? ${color_reset}"
  PS4="${fg_separator}+ ${color_reset}"
  unset fg_shell fg_path fg_git fg_separator color_reset
fi

reload_dotfiles() {
  require_source "${XDG_CONFIG_HOME:-$HOME/.config}/sh/env"
  require_source "${XDG_CONFIG_HOME:-$HOME/.config}/sh/login"
  require_source "${XDG_CONFIG_HOME:-$HOME/.config}/sh/interactive"
}

# Load shell specific env modules
load_per_application_modules interactive sh

