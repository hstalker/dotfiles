#!/usr/bin/env bash
###############################################################################
# Perform configuration for all interactive bash shells
require_source "${XDG_CONFIG_HOME:-$HOME/.config}/shell/interactive"

###############################################################################
# Setup environment variables

# Colors and PS1 setup - for now this is largely shared between shells.
# Bash sets up the PS variables by running this function prior to prompting.
function __prompt_command () {
  local last_exit_code="$?"

  # Tramp and other dumb terminals require a more simple prompt
  if [ "$TERM" = "dumb" ]; then
    PS1="$ "
    PS2='> '
    PS3='#? '
    PS4='+ '
  else
    local fg_shell
    local fg_path
    local fg_git
    local fg_exit
    local fg_jobs
    local fg_depth
    local fg_separator
    local color_reset

    local working_directory
    local vcs_branch

    if [ "$(id -u)" -eq 0 ]; then
      # Root prompt colors
      fg_shell="$(text_fg_color 10)"
      fg_path="$(text_fg_color 10)"
      fg_git="$(text_fg_color 10)"
      fg_exit="$(text_fg_color 10)"
      fg_jobs="$(text_fg_color 10)"
      fg_depth="$(text_fg_color 10)"
      fg_separator="$(text_fg_color cyan)"
    else
      fg_shell="$(text_fg_color 10)"
      fg_path="$(text_fg_color red)"
      fg_git="$(text_fg_color blue)"
      fg_exit="$(text_fg_color blue)"
      fg_jobs="$(text_fg_color blue)"
      fg_depth="$(text_fg_color blue)"
      fg_separator="$(text_fg_color cyan)"
    fi
    color_reset="$(text_reset)"

    working_directory="$(basename "${PWD}")/"
    vcs_branch="$(get_vcs_branch)"

    # We escape the lengths of the colors via \[\] here rather than the color
    # definitions above, as Bash seems to struggle if we don't.

    # User, hostname and shell-type
    PS1="\[${color_reset}\]\[${fg_shell}\][\u@\h:\s]"
    # Clipped working directory
    PS1+="\[${fg_path}\]<${working_directory}>"
    # VCS branch
    PS1+="\[${fg_git}\]${vcs_branch} "
    # Last exit code
    PS1+="\[${fg_exit}\]{EXIT: ${last_exit_code}} "
    # Running jobs
    PS1+="\[${fg_jobs}\]{JOBS: \j} "
    # Shell depth
    PS1+="\[${fg_depth}\]{DEPTH: ${SHLVL}} "
    # Final separator - we place on a new-line to more clearly delineate
    # between inputs
    PS1+="\n\[${fg_separator}\]Î» "
    PS1+="\[${color_reset}\]"
    PS2="${fg_separator}> ${color_reset}"
    PS3="${fg_separator}#? ${color_reset}"
    PS4="${fg_separator}+ ${color_reset}"
  fi
}
PROMPT_COMMAND="__prompt_command"

# Place the history in state
HISTFILE="${XDG_STATE_HOME:-$HOME/.local/state}/bash/history"
# Don't put duplicate lines or lines starting with space in the history
HISTCONTROL=ignoreboth:erasedups
# For setting history length
HISTSIZE=10000
HISTFILESIZE=$HISTSIZE
# Append to the history file, don't overwrite it
shopt -s histappend

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS
shopt -s checkwinsize

# Enable programmable completion features (you don't need to enable
# this if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    require_source /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    require_source /etc/bash_completion
  fi
fi

# Default to Emacs keybindings
set -o emacs

reload_dotfiles() {
  require_source "${XDG_CONFIG_HOME:-$HOME/.config}/bash/env"
  require_source "${XDG_CONFIG_HOME:-$HOME/.config}/bash/login"
  require_source "${XDG_CONFIG_HOME:-$HOME/.config}/bash/interactive"
}

# Load shell specific interactive modules
load_per_application_modules interactive bash

