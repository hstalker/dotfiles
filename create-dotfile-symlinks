#!/bin/bash

# grabs the path of this script as a base in order to find the
# config files to symlink
script_path="$(cd "$(dirname "$0")"; pwd -P)"

check_and_symlink () {
    # the output path to place the symlinks at. modify if necessary
    local out_sym_prefix=~
    mkdir -p $out_sym_prefix

    [ $# -lt 1 ] && [ $# -gt 2 ] && \
        echo Incorrect no. of args passed to check_and_symlink\(\) && \
        exit 1

    [ $# -eq 2 ] && mkdir -p $out_sym_prefix/$2

    echo Symlinking $1 configuration...
    [ -e $script_path/$1 ] && [ ! -e $out_sym_prefix/$1 ] && \
        ln -s $script_path/$1 $out_sym_prefix/$1 || \
        echo Either unable to find $1 or symlink already exists!
}

echo Creating symlinks for useful dotfiles in this script\'s directory...

check_and_symlink .vimrc

check_and_symlink .emacs.d/init.el .emacs.d

check_and_symlink .clang-tidy
check_and_symlink .clang-format

check_and_symlink .bash_profile
check_and_symlink .bashrc

check_and_symlink .gitignore
check_and_symlink .gitattributes

check_and_symlink .minttyrc

check_and_symlink .tmux.conf

echo Done!
